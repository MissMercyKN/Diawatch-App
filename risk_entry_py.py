# -*- coding: utf-8 -*-
"""risk_entry.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j0whjmpeK078rCClOwgF2xg498lspA-K

risk_entry.py
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit

import streamlit as st
import pandas as pd
from datetime import datetime
import os

"""Set up the Streamlit app layout

"""

st.title("ü©∫ Diabetes Risk Checker")
st.subheader("Fill in the details below to check your risk")

"""Input Fields"""

age = st.number_input("Age", min_value=1, max_value=120, value=30)
glucose = st.number_input("Glucose Level (mg/dL)", min_value=50, max_value=300, value=100)
blood_pressure = st.number_input("Blood Pressure (mm Hg)", min_value=40, max_value=200, value=80)
bmi = st.number_input("BMI (Body Mass Index)", min_value=10.0, max_value=60.0, value=22.5, step=0.1)
insulin = st.number_input("Insulin Level (mu U/ml)", min_value=0.0, max_value=900.0, value=80.0, step=1.0)
pregnancies = st.number_input("Number of Pregnancies", min_value=0, max_value=20, value=0)

"""Submit Button"""

if st.button("‚úÖ Check My Risk"):
    # Validate input (basic example)
    if glucose == 0 or bmi == 0:
        st.error("Glucose and BMI must be greater than 0.")
    else:
        # Save data to CSV
        new_data = {
            "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "age": age,
            "glucose": glucose,
            "blood_pressure": blood_pressure,
            "bmi": bmi,
            "insulin": insulin,
            "pregnancies": pregnancies,
        }

        df_new = pd.DataFrame([new_data])

        file_path = "risk_data.csv"

        if os.path.exists(file_path):
            df_existing = pd.read_csv(file_path)
            df_combined = pd.concat([df_existing, df_new], ignore_index=True)
        else:
            df_combined = df_new

        df_combined.to_csv(file_path, index=False)
        st.success("‚úîÔ∏è Your data has been recorded!")

"""Placeholder for later integration with Karen's model"""



"""risk = predict_diabetes([age, glucose, blood_pressure, bmi, insulin, pregnancies])"""



"""st.write(f"Predicted Risk: {risk}")


"""

